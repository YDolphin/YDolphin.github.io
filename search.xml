<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Mac 安装 brew 以及部分使用指令]]></title>
    <url>%2F2018%2F09%2F17%2F%E5%B7%A5%E5%85%B7%2FMac%20%E5%AE%89%E8%A3%85%20%20brew%20%E4%BB%A5%E5%8F%8A%E9%83%A8%E5%88%86%E4%BD%BF%E7%94%A8%E6%8C%87%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Mac 安装 brew 以及部分使用指令NO.1 官网获取下载指令http://brew.sh/ Homebrew安装成功后，会自动创建目录 /usr/local/Cellar 来存放Homebrew安装的程序 NO.2 使用 brew 安装软件：brew install 软件名，例：brew install wget 搜索软件：brew search 软件名，例：brew search wget 卸载软件：brew uninstall 软件名，例：brew uninstall wget 更新所有软件：brew update 更新具体软件：brew upgrade 软件名 ，例：brew upgrade git 显示已安装软件：brew list 查看软件信息：brew info／home 软件名 ，例：brew info git ／ brew home gitPS：brew home指令是用浏览器打开官方网页查看软件信息 查看哪些已安装的程序需要更新： brew outdated 显示包依赖：brew reps 显示帮助：brew help]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[POJ 1852 Ants]]></title>
    <url>%2F2018%2F09%2F15%2FACM%2FPOJ%2F1852%2F</url>
    <content type="text"><![CDATA[POJ 1852 Ants123456789101112131415161718192021222324252627282930313233343536373839404142/* POJ:1852 题意：简单的理解就是， N 只蚂蚁以 1cm/s 的速度在，一条长 L 厘米的竿子上爬行（不知道初始的爬行方向），当蚂蚁爬到竿子的端点时会掉落。 但竿子太细了，如果有两只蚂蚁相遇时，它们只能各自反向爬回去。 对于蚂蚁，我们只知道它们距离竿子左端的距离 xi，但不知道当前蚂蚁的朝向 请计算所有蚂蚁落下竿子所需要的最短时间和最长时间 迷惑条件：如果有两只蚂蚁相遇时，它们只能各自反向爬回去。 转换思路：其实不管相遇后各自反向爬 OR 相遇后保持原方向爬行，结果都是一样的。 这样的话，最短时间 = MAX（所有蚂蚁距离竿子端点的最近距离） 最长时间 = MAX（所有蚂蚁距离竿子端点的最远距离）*/#include "iostream"using namespace std;#define MAX_N 1000010 int t,n,l,x[MAX_N];int maxT, minT;void solve()&#123; minT = 0; maxT = 0; for(int i = 0; i &lt; n ; i++)&#123; minT = max(minT, min(x[i], l - x[i])); maxT = max(maxT, max(x[i], l - x[i])); &#125;&#125;int main()&#123; scanf("%d", &amp;t); while(t--)&#123; scanf("%d %d", &amp;l , &amp;n); for(int i = 0; i &lt; n; i++)&#123; scanf("%d", &amp;x[i]); &#125; solve(); printf("%d %d\n", minT, maxT); &#125; return 0;&#125;]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>ACM</tag>
        <tag>POJ</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JetBrains系开发工具激活]]></title>
    <url>%2F2018%2F09%2F11%2F%E5%B7%A5%E5%85%B7%2FJetBrains%E7%B3%BB%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E6%BF%80%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[NO.1 将“0.0.0.0 account.jetbrains.com”添加到 hosts 文件末尾处 hosts 文件所在目录： Windows：C:\Windows\System32\drivers\etc\hosts Mac：/etc/hosts NO.2 进入 http://idea.lanyus.com/ ，获得注册码即可。]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac终端添加ll、la、l命令]]></title>
    <url>%2F2018%2F09%2F10%2F%E5%B7%A5%E5%85%B7%2FMac%E7%BB%88%E7%AB%AF%E6%B7%BB%E5%8A%A0ll%E3%80%81la%E3%80%81l%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Mac终端添加ll、la、l命令uNO.1 编辑.bash_profile文件1vim ~/.bash_profile NO.2 添加别名映射关系123alias ll='ls -alF'alias la='ls -A'alias l='ls -CF' NO.3 source 文件1source ~/.bash_profile]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac如何重置root用户密码]]></title>
    <url>%2F2018%2F09%2F10%2F%E5%B7%A5%E5%85%B7%2FMac%E5%A6%82%E4%BD%95%E9%87%8D%E7%BD%AEroot%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%2F</url>
    <content type="text"><![CDATA[Mac如何重置root用户密码？1、打开终端，输入：sudo bash，提示输入当前用户密码 2、成功进入bash命令模式之后，输入 sudo passwd root 3、输入新的 root 密码即可]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
</search>
